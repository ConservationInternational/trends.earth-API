services:
  migrate:
    image: ${DOCKER_REGISTRY:-registry.example.com:5000}/trendsearth-api
    command: migrate
    environment:
      PORT: 3000
    env_file:
      - prod.env
    group_add:
      - ${DOCKER_GROUP_ID:-999}
    networks:
      - backend
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

  manager:
    image: ${DOCKER_REGISTRY:-registry.example.com:5000}/trendsearth-api
    command: start
    environment:
      PORT: 3000
    ports:
      - target: 3000
        published: 3001
    env_file:
      - prod.env
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    group_add:
      - ${DOCKER_GROUP_ID:-999}
    networks:
      - backend
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        reservations:
          cpus: "0.25"
          memory: 400M
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
        max_failure_ratio: 0.3
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 0s
        failure_action: pause
        monitor: 60s
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  worker:
    image: ${DOCKER_REGISTRY:-registry.example.com:5000}/trendsearth-api
    command: worker
    environment:
      PORT: 3000
    env_file:
      - prod.env
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    group_add:
      - ${DOCKER_GROUP_ID:-999}
    networks:
      - backend
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        reservations:
          cpus: "0.25"
          memory: 400M
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
        max_failure_ratio: 0.3
      rollback_config:
        parallelism: 1
        delay: 0s
        failure_action: pause
        monitor: 60s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  beat:
    image: ${DOCKER_REGISTRY:-registry.example.com:5000}/trendsearth-api
    command: beat
    environment:
      PORT: 3000
    env_file:
      - prod.env
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    group_add:
      - ${DOCKER_GROUP_ID:-999}
    networks:
      - backend
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        reservations:
          cpus: "0.25"
          memory: 400M
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
        max_failure_ratio: 0.3
      rollback_config:
        parallelism: 1
        delay: 0s
        failure_action: pause
        monitor: 60s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  redis:
    image: redis
    ports:
      - target: 6379
    networks:
      - backend
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        reservations:
          cpus: "0.25"
          memory: 100M

networks:
  backend:
    driver: overlay
    ipam:
      config:
        - subnet: ${DOCKER_SUBNET:-10.10.0.0/16}
