services:
  admin:
    image: ${REGISTRY_HOST:-registry.example.com:5000}/trendsearth-api
    build: .
    environment:
      PORT: 3000
    ports:
      - target: 3000
    env_file:
      - prod.env
    command: start
    volumes:
      - ./gefapi:/opt/gef-api/gefapi
      - ./migrations:/opt/gef-api/migrations

  builder:
    image: ${REGISTRY_HOST:-registry.example.com:5000}/trendsearth-api
    build: .
    command: worker
    user: root
    environment:
      CELERY_WORKER_QUEUES: build
    env_file:
      - prod.env
    volumes:
      - ./gefapi:/opt/gef-api/gefapi
      - ./migrations:/opt/gef-api/migrations
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role == manager]
