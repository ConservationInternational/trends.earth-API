"""add script access control

Revision ID: 1f38b2475f49
Revises: 9c02502c27db
Create Date: 2025-07-31 15:50:54.148805

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1f38b2475f49'
down_revision = '9c02502c27db'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('script', schema=None) as batch_op:
        batch_op.add_column(sa.Column('allowed_roles', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('allowed_users', sa.Text(), nullable=True))
        # Add restricted column as nullable first, then set default values and make it NOT NULL
        batch_op.add_column(sa.Column('restricted', sa.Boolean(), nullable=True))
    
    # Set default value for existing records (false = unrestricted by default)
    op.execute("UPDATE script SET restricted = false WHERE restricted IS NULL")
    
    # Now make the column NOT NULL
    with op.batch_alter_table('script', schema=None) as batch_op:
        batch_op.alter_column('restricted', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('script', schema=None) as batch_op:
        batch_op.drop_column('restricted')
        batch_op.drop_column('allowed_users')
        batch_op.drop_column('allowed_roles')

    # ### end Alembic commands ###
