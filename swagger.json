{
  "components": {
    "responses": {
      "ForbiddenError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Insufficient permissions"
      },
      "NotFoundError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Resource not found"
      },
      "UnauthorizedError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Authentication required"
      }
    },
    "schemas": {
      "Error": {
        "properties": {
          "detail": {
            "description": "Detailed error description",
            "type": "string"
          },
          "error": {
            "description": "Error message",
            "type": "string"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "Execution": {
        "properties": {
          "duration": {
            "description": "Execution duration in seconds (when included)",
            "type": "number"
          },
          "end_date": {
            "description": "Execution end timestamp",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the execution",
            "format": "uuid",
            "type": "string"
          },
          "params": {
            "additionalProperties": {},
            "description": "Execution parameters",
            "type": "object"
          },
          "progress": {
            "description": "Execution progress percentage (0-100)",
            "type": "integer"
          },
          "results": {
            "additionalProperties": {},
            "description": "Execution results",
            "type": "object"
          },
          "script_id": {
            "description": "ID of the executed script",
            "format": "uuid",
            "type": "string"
          },
          "start_date": {
            "description": "Execution start timestamp",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Execution status (PENDING, RUNNING, FINISHED, FAILED)",
            "type": "string"
          },
          "user_id": {
            "description": "ID of user who ran the script",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "id",
          "script_id",
          "user_id"
        ],
        "type": "object"
      },
      "ExecutionLog": {
        "properties": {
          "execution_id": {
            "description": "ID of associated execution",
            "format": "uuid",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the log entry",
            "type": "integer"
          },
          "level": {
            "description": "Log level (DEBUG, INFO, WARNING, ERROR)",
            "type": "string"
          },
          "register_date": {
            "description": "Log entry timestamp",
            "format": "date-time",
            "type": "string"
          },
          "text": {
            "description": "Log message text",
            "type": "string"
          }
        },
        "required": [
          "id",
          "level",
          "text"
        ],
        "type": "object"
      },
      "HealthCheck": {
        "properties": {
          "database": {
            "description": "Database connectivity status",
            "type": "string"
          },
          "status": {
            "description": "Overall health status",
            "type": "string"
          },
          "timestamp": {
            "description": "Health check timestamp",
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "description": "API version",
            "type": "string"
          }
        },
        "required": [
          "database",
          "status",
          "timestamp",
          "version"
        ],
        "type": "object"
      },
      "Script": {
        "properties": {
          "cpu_limit": {
            "description": "Maximum CPU limit",
            "type": "integer"
          },
          "cpu_reservation": {
            "description": "Reserved CPU resources",
            "type": "integer"
          },
          "created_at": {
            "description": "Script creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the script",
            "format": "uuid",
            "type": "string"
          },
          "memory_limit": {
            "description": "Maximum memory limit (MB)",
            "type": "integer"
          },
          "memory_reservation": {
            "description": "Reserved memory (MB)",
            "type": "integer"
          },
          "name": {
            "description": "Script name",
            "type": "string"
          },
          "public": {
            "description": "Whether script is publicly accessible",
            "type": "boolean"
          },
          "slug": {
            "description": "URL-friendly script identifier",
            "type": "string"
          },
          "status": {
            "description": "Script status (PENDING, SUCCESS, FAILED)",
            "type": "string"
          },
          "user_id": {
            "description": "ID of script owner",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "slug"
        ],
        "type": "object"
      },
      "StatusLog": {
        "properties": {
          "cpu_usage_percent": {
            "description": "CPU usage percentage",
            "type": "number"
          },
          "executions_active": {
            "description": "Number of active executions",
            "type": "integer"
          },
          "executions_count": {
            "description": "Total number of executions",
            "type": "integer"
          },
          "executions_failed": {
            "description": "Number of failed executions",
            "type": "integer"
          },
          "executions_finished": {
            "description": "Number of finished executions",
            "type": "integer"
          },
          "executions_ready": {
            "description": "Number of ready executions",
            "type": "integer"
          },
          "executions_running": {
            "description": "Number of running executions",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the status log",
            "format": "uuid",
            "type": "string"
          },
          "memory_available_percent": {
            "description": "Available memory percentage",
            "type": "number"
          },
          "scripts_count": {
            "description": "Total number of scripts",
            "type": "integer"
          },
          "timestamp": {
            "description": "When the status was recorded",
            "format": "date-time",
            "type": "string"
          },
          "users_count": {
            "description": "Total number of users",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "timestamp"
        ],
        "type": "object"
      },
      "User": {
        "properties": {
          "country": {
            "description": "User's country",
            "type": "string"
          },
          "created_at": {
            "description": "Account creation timestamp",
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "description": "User's email address",
            "format": "email",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the user",
            "format": "uuid",
            "type": "string"
          },
          "institution": {
            "description": "User's institution",
            "type": "string"
          },
          "name": {
            "description": "User's full name",
            "type": "string"
          },
          "role": {
            "description": "User role (USER, ADMIN, SUPERADMIN)",
            "type": "string"
          }
        },
        "required": [
          "email",
          "id"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "name": "Trends.Earth Team",
      "url": "https://trends.earth"
    },
    "description": "API for managing Scripts, Users, and Executions in Trends.Earth",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "title": "Trends.Earth API",
    "version": "1.0.0",
    "x-generated-at": "2025-07-11T16:07:39.343324"
  },
  "openapi": "3.0.2",
  "paths": {
    "/api-health": {
      "get": {
        "description": "Check API health status and database connectivity",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheck"
                }
              }
            },
            "description": "Health check status"
          }
        },
        "summary": "Health check",
        "tags": [
          "Health"
        ]
      }
    },
    "/api/v1/execution": {
      "get": {
        "description": "Get list of executions with filtering and sorting",
        "parameters": [
          {
            "description": "Filter by execution status",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "PENDING",
                "RUNNING",
                "FINISHED",
                "FAILED"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter executions started after this date",
            "in": "query",
            "name": "start_date_gte",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filter executions started before this date",
            "in": "query",
            "name": "start_date_lte",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filter executions ended after this date",
            "in": "query",
            "name": "end_date_gte",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filter executions ended before this date",
            "in": "query",
            "name": "end_date_lte",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Sort field (prefix with - for descending)",
            "in": "query",
            "name": "sort",
            "schema": {
              "example": "-start_date",
              "type": "string"
            }
          },
          {
            "description": "Additional data to include",
            "in": "query",
            "name": "include",
            "schema": {
              "example": "duration,user,script",
              "type": "string"
            }
          },
          {
            "description": "Data to exclude",
            "in": "query",
            "name": "exclude",
            "schema": {
              "example": "params,results",
              "type": "string"
            }
          },
          {
            "description": "Page number (only applies if pagination is requested)",
            "in": "query",
            "name": "page",
            "schema": {
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Items per page (only applies if pagination is requested)",
            "in": "query",
            "name": "per_page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Execution"
                      },
                      "type": "array"
                    },
                    "page": {
                      "description": "Current page number (only included when pagination is requested)",
                      "type": "integer"
                    },
                    "per_page": {
                      "description": "Items per page (only included when pagination is requested)",
                      "type": "integer"
                    },
                    "total": {
                      "description": "Total number of items (only included when pagination is requested)",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "List of executions"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "List executions",
        "tags": [
          "Executions"
        ]
      }
    },
    "/api/v1/script": {
      "get": {
        "description": "Get list of user's scripts",
        "parameters": [
          {
            "description": "Additional data to include",
            "in": "query",
            "name": "include",
            "schema": {
              "example": "executions,logs",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Script"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "List of scripts"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "List scripts",
        "tags": [
          "Scripts"
        ]
      }
    },
    "/api/v1/status": {
      "get": {
        "description": "Get system monitoring data (Admin only)",
        "parameters": [
          {
            "description": "Filter logs from this date",
            "in": "query",
            "name": "start_date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filter logs until this date",
            "in": "query",
            "name": "end_date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Sort field",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "-timestamp",
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Items per page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 100,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/StatusLog"
                      },
                      "type": "array"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "System status logs"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get system status logs",
        "tags": [
          "System Status"
        ]
      }
    },
    "/api/v1/user": {
      "get": {
        "description": "Get list of all users (Admin only)",
        "parameters": [
          {
            "description": "Additional data to include",
            "in": "query",
            "name": "include",
            "schema": {
              "example": "scripts,executions",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/User"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "List of users"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "List users",
        "tags": [
          "Users"
        ]
      },
      "post": {
        "description": "Create a new user account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "country": {
                    "type": "string"
                  },
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "institution": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "User created successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          }
        },
        "summary": "Create user",
        "tags": [
          "Users"
        ]
      }
    },
    "/auth": {
      "post": {
        "description": "Authenticate user with email and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "format": "email",
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Successful authentication"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "summary": "Authenticate user",
        "tags": [
          "Authentication"
        ]
      }
    }
  },
  "servers": [
    {
      "description": "Production server",
      "url": "https://api.trends.earth"
    },
    {
      "description": "Staging server",
      "url": "https://staging-api.trends.earth"
    },
    {
      "description": "Development server",
      "url": "http://localhost:5000"
    }
  ]
}